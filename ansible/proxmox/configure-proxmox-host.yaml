---
- hosts: pve
  gather_facts: true
  name: "configure proxmox host"
  vars:
    created_username: pj

  tasks:
    - name: Update repository configuration
      lineinfile:
        path: /etc/apt/sources.list
        regexp: "^#deb"
        line: "deb http://download.proxmox.com/debian/pve {{ ansible_distribution_release }} pve-no-subscription"
        state: present

    - name: Disable pve-enterprise repository
      lineinfile:
        path: /etc/apt/sources.list.d/pve-enterprise.list
        regexp: "^deb"
        line: "#deb https://enterprise.proxmox.com/debian/pve {{ ansible_distribution_release }} pve-enterprise"
        state: present

    - name: Update apt cache
      apt:
        cache_valid_time: 3600

    - name: Upgrade packages
      apt:
        upgrade: true

    - name: Install packages
      apt:
        name:
          - vim
          - sudo
          - zsh
        state: present

    - name: Create an ansible user with sudo privileges
      user:
        name: ansible
        state: present
        groups: sudo
        append: true
        create_home: true

    - name: Copy SSH key for ansible user
      authorized_key:
        user: ansible
        state: present
        key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_ed25519.pub') }}"

    # Grant passwordless sudo access for ansible user
    - name: Grant passwordless sudo access for ansible user
      lineinfile:
        path: /etc/sudoers
        line: "ansible ALL=(ALL) NOPASSWD:ALL"
        state: present
        validate: "/usr/sbin/visudo -cf %s"

    - name: Create a new regular user with sudo privileges
      user:
        name: "{{ created_username }}"
        state: present
        groups: sudo
        append: true
        create_home: true

    - name: Set default shell to zsh
      become: true
      user:
        name: "{{ created_username }}"
        shell: /bin/zsh

    - name: Set authorized key for remote user
      authorized_key:
        user: "{{ created_username }}"
        state: present
        key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_ed25519.pub') }}"

    # Disable password login
    - name: Disable password login
      lineinfile:
        path: /etc/ssh/sshd_config
        state: present
        backup: true
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      loop:
        - regexp: "^#?PasswordAuthentication"
          line: "PasswordAuthentication no"
        - regexp: "^#?PermitRootLogin"
          line: "PermitRootLogin prohibit-password"
      # loop:
      #   - {
      #       regexp: "^#?PasswordAuthentication",
      #       line: "PasswordAuthentication no",
      #     }
      #   - {
      #       regexp: "^#?PermitRootLogin",
      #       line: "PermitRootLogin prohibit-password",
      #     }

  handlers:
    - name: restart sshd
      service:
        name: sshd
        state: restarted

---
- hosts: surface-hosts
  gather_facts: false
  name: "create VM template"
  vars:
    ansible_user: ansible
    ansible_ssh_private_key_file: ~/.ssh/id_ed25519
    vm:
      cloud_image_url: https://cloud-images.ubuntu.com/jammy/current/jammy-server-cloudimg-amd64.img
      cloud_image_path: /tmp/jammy-server-cloudimg-amd64.img
      template_id: "{{ hostvars[inventory_hostname]['template_id'] }}"
      template_name: ubuntu-2204-cloudinit-template
      template_memory: 4096
  tasks:
    - name: Check if cloud image exists
      stat:
        path: "{{ vm.cloud_image_path }}"
      register: image_status

    - name: Download cloud image
      get_url:
        url: "{{ vm.cloud_image_url }}"
        dest: "{{ vm.cloud_image_path }}"
        mode: 0700
      when: not image_status.stat.exists

    - name: Create a VM to use as a template
      command: "qm create {{ vm.template_id }} --name {{ vm.template_name }} --memory {{ vm.template_memory }} --net0 virtio,bridge=vmbr0"
      become: true

    - name: Import disk image
      command: "qm importdisk {{ vm.template_id }} {{ vm.cloud_image_path }} local-lvm"
      become: true

    - name: Configure VM to use imported image
      command: "qm set {{ vm.template_id }} --scsihw virtio-scsi-pci --scsi0 local-lvm:vm-{{ vm.template_id }}-disk-0"
      become: true

    - name: Add cloud-init image as CDROM
      command: "qm set {{ vm.template_id }} --ide2 local-lvm:cloudinit"
      become: true

    - name: Configure boot from the image
      command: "qm set {{ vm.template_id }} --boot c --bootdisk scsi0"
      become: true

    - name: Attach serial console
      command: "qm set {{ vm.template_id }} --serial0 socket --vga serial0"
      become: true

    - name: Create template
      command: "qm template {{ vm.template_id }}"
      become: true

    - name: Delete cloud image
      file:
        dest: "{{ vm.cloud_image_path }}"
        state: absent
